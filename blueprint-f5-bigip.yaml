tosca_definitions_version: cloudify_dsl_1_3


description: >
  Create an instance of BIG-IP on Azure.

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-utilities-plugin

inputs:
  location:
    type: string
    description: Azure Region
    default: westeurope

  resource_group:
    default: dhl-poc-rg

  virtual_machine_size:
    description: Name of Virtual Machine Size in Azure.
    default: Standard_DS4_v2

  virtual_machine_image_sku:
    description: An instance of an offer, such as a major release of a distribution.
    default: 'f5-big-all-1slot-byol'

  virtual_machine_image_publisher:
    description: Name of the organization that created the image.
    default: 'f5-networks'

  virtual_machine_image_offer:
    description: The name of a group of related images created by a publisher.
    default: 'f5-big-ip-byol'

  retry_after:
    type: integer
    default: 60

  network_api_version:
    description: API Version for Network
    default: "2015-06-15"

  resource_prefix:
    description: Prefix of every resource created at this deployment on Azure.
    default: ""

  resource_suffix:
    description: Suffix of every resource created at this deployment on Azure.
    default: ""

  bigip_license:
    description: License for BIGIP
    type: string

dsl_definitions:
  client_config: &client_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

  terminal_auth: &terminal_auth
    user: { get_secret: bigip_username }
    password: { get_secret: bigip_password }
    ip: { get_attribute: [mgmt_nic, ip] }
    promt_check:
      - '#'
      - '$'
    errors:
      - "Command fail."

node_templates:
  license:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: scripts/install_f5_license.txt
                params:
                  REG_KEY: { get_input: bigip_license }
        delete:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: scripts/revoke_f5_license.txt
                responses:
                  - question: 'Revoking the license will return this BIG-IP to an unlicensed state.  It will stop processing traffic. Are you sure? Y/N:'
                    answer: 'Y'
    relationships:
    - type: cloudify.relationships.depends_on
      target: virtual_machine

  vlan_configuration:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: scripts/f5_vlan_config.txt
                params:
                  IP_INSIDE: { get_attribute: [wan_nic, ip] }
                  IP_OUTSIDE: { get_attribute: [public_nic, ip] }
        delete:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: scripts/f5_vlan_config_delete.txt
                params:
                  IP_INSIDE: { get_attribute: [wan_nic, ip] }
                  IP_OUTSIDE: { get_attribute: [public_nic, ip] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: license

  virtual_machine:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      os_family: linux
      agent_config:
        install_method: none
      plan:
        name: { get_input: virtual_machine_image_sku }
        publisher: { get_input: virtual_machine_image_publisher }
        product: { get_input: virtual_machine_image_offer }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: virtual_machine_size }
        storageProfile:
          imageReference:
            publisher: { get_input: virtual_machine_image_publisher }
            offer: { get_input: virtual_machine_image_offer }
            sku: { get_input: virtual_machine_image_sku }
            version: latest
        osProfile:
          adminUsername: { get_secret: bigip_username }
          adminPassword: { get_secret: bigip_password }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_nic
      target: wan_nic
    - type: cloudify.azure.relationships.connected_to_nic
      target: public_nic
    - type: cloudify.azure.relationships.connected_to_nic
      target: mgmt_nic

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  mgmt_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      primary: true
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: mgmt_ip_configuration
        # target: wan_ip_configuration
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  mgmt_ip_configuration:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: mgmt_subnet
        # target: wan_subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: mgmt_ip_address

  mgmt_ip_address:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config:  *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  public_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      primary: false
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: public_ip_configuration
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  public_ip_configuration:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: public_subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: public_ip_address

  public_ip_address:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config:  *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  wan_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      primary: false
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: wan_ip_configuration
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  wan_ip_configuration:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: wan_subnet

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: *client_config
      name: { get_input: resource_group }
      location: { get_input: location }
      use_external_resource: true

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      use_external_resource: true
      azure_config: *client_config
      api_version: { get_input: network_api_version }
      name: { concat: [ { get_input: resource_group }, '-vnet' ] }
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  mgmt_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      use_external_resource: true
      azure_config: *client_config
      api_version: { get_input: network_api_version }
      name: mgmt_subnet
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  public_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      use_external_resource: true
      azure_config: *client_config
      api_version: { get_input: network_api_version }
      name: wan_subnet
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  wan_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      use_external_resource: true
      azure_config: *client_config
      api_version: { get_input: network_api_version }
      name: default
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      azure_config: *client_config
      use_external_resource: false
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
          - name: all_tcp
            properties:
              description: All TCP
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: '*'
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 100
              access: Allow
              direction: Inbound
          - name: all_ucp
            properties:
              description: All UDP
              protocol: Udp
              sourcePortRange: '*'
              destinationPortRange: '*'
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 101
              access: Allow
              direction: Inbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

capabilities:
  mgmt_public_ip:
    description: Public IP of management interface
    value: { get_attribute: [mgmt_nic, public_ip] }
  wan_ip:
    description: Private IP of WAN interface
    value: { get_attribute: [wan_nic, ip] }
  public_ip:
    description: Private IP of Public interface
    value: { get_attribute: [public_nic, ip] }
  public_public_ip:
    description: Public IP of Public interface
    value: { get_attribute: [public_nic, public_ip] }
