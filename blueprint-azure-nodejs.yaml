tosca_definitions_version: cloudify_dsl_1_3

description: >
  Create Ubuntu VM in Azure.

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-ansible-plugin
  - plugin:cloudify-utilities-plugin
  - plugin:cloudify-nagiosrest-plugin
  - plugin:cloudify-daclp-plugin 
  - blueprint-common.yaml

node_templates:
  run:
    type: cloudify.nodes.ansible.Playbook
    properties:
      playbook_path: ansible/nodejs/site.yaml
    relationships:
      - type: cloudify.ansible.relationships.run_on_host
        target: webserver_vm
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            establish:
              inputs:
                sources:
                  webservers:
                    hosts:
                      web:
                        ansible_host: { get_attribute: [TARGET, ip] }
                        ansible_user: { get_input: webserver_vm_os_username }
                        ansible_ssh_private_key_file: { get_property: [webserver_vm, agent_config, key] }
                        ansible_become: true
                        ansible_ssh_common_args: -o StrictHostKeyChecking=no
                options_config:
                  extra_vars:
                    homeDir: { concat: ['/home/', { get_attribute: [TARGET, resource, os_profile, admin_username] }] }
                    message: { get_input: message }
                    appDir: { get_secret: nodejs_app_dir }

  service_update:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        update:
          implementation: scripts/do_update_nodejs.py
          inputs:
            user: { get_secret: nodejs_index_user }
            message: 'default message'
            appDir: { get_secret: nodejs_app_dir }
    relationships:
      - type: cloudify.relationships.contained_in
        target: webserver_vm

  check:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        start: scripts/check_nodejs.sh
    relationships:
      - type: cloudify.relationships.depends_on
        target: run
      - type: cloudify.relationships.contained_in
        target: webserver_vm
